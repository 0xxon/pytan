
pytan package
*************


PyTan Description
=================

A Python library that provides a simple way for programmatically
interfacing with Tanium's SOAP API. It is comprised of three parts:

* TaniumPy API: A set of Python objects that are automatically
  generated from the WSDL that describes the Tanium SOAP API.

* PyTan Handler API: An API that makes the objects exposed by
  TaniumPy easier to use.

* PyTan Command Line Scripts: A set of command line scripts that
  utilize the PyTan Handler API to make it easy for non-programmers to
  utilize the Tanium SOAP API to create/get/delete/ask/deploy objects.


Why PyTan was created
=====================

PyTan was created to solve for the following needs:

* Create a python library to provide an easy set of methods for
  programmatically interfacing with Tanium via the SOAP API

* Create a set of command line scripts utilizing the python library
  created above that handle the argument parsing, thereby providing
  non-python users with command line access to the functionality
  provided by the methods inside of the python library

* Provide a way to ask questions and get results via Python and/or
  the command line.

* Provide a way to deploy actions and get results via Python and/or
  the command line.

* Provide a way to export/import objects in JSON via Python and/or
  the command line.


Installation
============

Windows Installation
   * Download Python 2.7 from
     https://www.python.org/downloads/windows/

   * Install Python 2.7 -- if you accept the default paths it will
     install to C:Python27

   * Copy PyTan from github to your local machine somewhere

   * If you did not accept the default install path for Python 2.7,
     edit "pytan\winbin\CONFIG.bat" to change the *PYTHON* variable to
     point to the full path of *python.exe*

OS X Installation
   * OS X 10.8 and higher come with Python 2.7 out of the box

   * Copy PyTan from github to your local machine somewhere

Linux Installation
   * Ensure Python 2.7 is installed

   * Ensure the first *python* binary in your path points to your
     Python 2.7 installation

   * Copy PyTan from github to your local machine somewhere


Example Usage
=============

Setup a Handler() object:

   import sys
   sys.path.append('/path/to/pytan/')
   import pytan
   handler = pytan.Handler(username, password, host)


Subpackages
===========

* pytan.api package

  * Subpackages

    * pytan.api.object_types package

      * Submodules

        * pytan.api.object_types.action module

        * pytan.api.object_types.action_list module

        * pytan.api.object_types.action_list_info module

        * pytan.api.object_types.action_stop module

        * pytan.api.object_types.action_stop_list module

        * pytan.api.object_types.all_objects module

        * pytan.api.object_types.archived_question module

        * pytan.api.object_types.archived_question_list module

        * pytan.api.object_types.audit_data module

        * pytan.api.object_types.base module

        * pytan.api.object_types.cache_filter module

        * pytan.api.object_types.cache_filter_list module

        * pytan.api.object_types.cache_info module

        * pytan.api.object_types.client_count module

        * pytan.api.object_types.client_status module

        * pytan.api.object_types.column module

        * pytan.api.object_types.column_set module

        * pytan.api.object_types.computer_group module

        * pytan.api.object_types.computer_group_list module

        * pytan.api.object_types.computer_group_spec module

        * pytan.api.object_types.computer_spec_list module

        * pytan.api.object_types.error_list module

        * pytan.api.object_types.filter module

        * pytan.api.object_types.filter_list module

        * pytan.api.object_types.group module

        * pytan.api.object_types.group_list module

        * pytan.api.object_types.metadata_item module

        * pytan.api.object_types.metadata_list module

        * pytan.api.object_types.object_list module

        * pytan.api.object_types.object_list_types module

        * pytan.api.object_types.options module

        * pytan.api.object_types.package_file module

        * pytan.api.object_types.package_file_list module

        * pytan.api.object_types.package_file_status module

        * pytan.api.object_types.package_file_status_list module

        * pytan.api.object_types.package_file_template module

        * pytan.api.object_types.package_file_template_list module

        * pytan.api.object_types.package_spec module

        * pytan.api.object_types.package_spec_list module

        * pytan.api.object_types.parameter module

        * pytan.api.object_types.parameter_list module

        * pytan.api.object_types.parse_job module

        * pytan.api.object_types.parse_job_list module

        * pytan.api.object_types.parse_result module

        * pytan.api.object_types.parse_result_group module

        * pytan.api.object_types.parse_result_group_list module

        * pytan.api.object_types.parse_result_list module

        * pytan.api.object_types.plugin module

        * pytan.api.object_types.plugin_argument module

        * pytan.api.object_types.plugin_argument_list module

        * pytan.api.object_types.plugin_command_list module

        * pytan.api.object_types.plugin_list module

        * pytan.api.object_types.plugin_schedule module

        * pytan.api.object_types.plugin_schedule_list module

        * pytan.api.object_types.plugin_sql module

        * pytan.api.object_types.plugin_sql_column module

        * pytan.api.object_types.plugin_sql_result module

        * pytan.api.object_types.question module

        * pytan.api.object_types.question_list module

        * pytan.api.object_types.question_list_info module

        * pytan.api.object_types.result_info module

        * pytan.api.object_types.result_set module

        * pytan.api.object_types.row module

        * pytan.api.object_types.saved_action module

        * pytan.api.object_types.saved_action_approval module

        * pytan.api.object_types.saved_action_list module

        * pytan.api.object_types.saved_action_policy module

        * pytan.api.object_types.saved_action_row_id_list module

        * pytan.api.object_types.saved_question module

        * pytan.api.object_types.saved_question_list module

        * pytan.api.object_types.select module

        * pytan.api.object_types.select_list module

        * pytan.api.object_types.sensor module

        * pytan.api.object_types.sensor_list module

        * pytan.api.object_types.sensor_query module

        * pytan.api.object_types.sensor_query_list module

        * pytan.api.object_types.sensor_string_hints module

        * pytan.api.object_types.sensor_subcolumn module

        * pytan.api.object_types.sensor_subcolumn_list module

        * pytan.api.object_types.sensor_types module

        * pytan.api.object_types.soap_error module

        * pytan.api.object_types.system_setting module

        * pytan.api.object_types.system_settings_list module

        * pytan.api.object_types.system_status_aggregate module

        * pytan.api.object_types.system_status_list module

        * pytan.api.object_types.upload_file module

        * pytan.api.object_types.upload_file_list module

        * pytan.api.object_types.upload_file_status module

        * pytan.api.object_types.user module

        * pytan.api.object_types.user_list module

        * pytan.api.object_types.user_permissions module

        * pytan.api.object_types.user_role module

        * pytan.api.object_types.user_role_list module

        * pytan.api.object_types.version_aggregate module

        * pytan.api.object_types.version_aggregate_list module

        * pytan.api.object_types.white_listed_url module

        * pytan.api.object_types.white_listed_url_list module

        * pytan.api.object_types.xml_error module

  * Submodules

    * pytan.api.question_asker module

    * pytan.api.session module


Submodules
==========

* pytan.constants module

* pytan.handler module

* pytan.utils module

* pytan.xmltodict module
