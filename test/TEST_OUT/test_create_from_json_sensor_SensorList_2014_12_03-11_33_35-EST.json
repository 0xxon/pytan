{
  "_type": "sensors", 
  "sensor": [
    {
      "_type": "sensor", 
      "category": "Network", 
      "creation_time": "2014-10-01T20:11:07", 
      "delimiter": "|", 
      "description": "Returns IPv4 network routes, filtered to exclude noise. With Flags, Metric, Interface columns.\nExample:  172.16.0.0|192.168.1.1|255.255.0.0|UG|100|eth0", 
      "exclude_from_parse_flag": 1, 
      "hash": 435227963, 
      "hidden_flag": 0, 
      "id": 737, 
      "ignore_case_flag": 1, 
      "last_modified_by": "Jim Olsen", 
      "max_age_seconds": 60, 
      "metadata": {
        "_type": "metadata", 
        "item": [
          {
            "_type": "item", 
            "admin_flag": 0, 
            "name": "defined", 
            "value": "Tanium"
          }
        ]
      }, 
      "modification_time": "2014-10-01T20:11:07", 
      "name": "IP Route Details API TEST", 
      "queries": {
        "_type": "queries", 
        "query": [
          {
            "_type": "query", 
            "platform": "Windows", 
            "script": "strComputer = &quot;.&quot;\nSet objWMIService = GetObject(&quot;winmgmts:&quot; _\n    &amp; &quot;{impersonationLevel=impersonate}!\\\\&quot; &amp; strComputer &amp; &quot;\\root\\cimv2&quot;)\n\nSet collip = objWMIService.ExecQuery(&quot;select * from win32_networkadapterconfiguration where IPEnabled=&#039;True&#039;&quot;)\ndim ipaddrs()\nipcount = 0\nfor each ipItem in collip\n    for each ipaddr in ipItem.IPAddress\n        ipcount = ipcount + 1\n    next\nnext\nredim ipaddrs(ipcount)\nipcount = 0\nfor each ipItem in collip\n    for each ipaddr in ipItem.IPAddress\n        ipcount = ipcount + 1\n        ipaddrs(ipcount) = ipaddr\n    next\nnext\nlocalhost = &quot;127.0.0.1&quot;\n\nSet colItems = objWMIService.ExecQuery(&quot;Select * from Win32_IP4RouteTable&quot;)\n\nFor Each objItem in colItems\n    dest = objItem.Destination\n    gw = objItem.NextHop\n    mask = objItem.Mask\n    metric = objItem.Metric1\n    flags = objItem.Type\n    intf = objItem.InterfaceIndex\n    For i = 0 to ipcount\n        if gw = ipaddrs(i) and gw &lt;&gt; localhost then\n            gw = &quot;0.0.0.0&quot;\n        end if\n    Next\n    if gw &lt;&gt; localhost and dest &lt;&gt; &quot;224.0.0.0&quot; and right(dest,3) &lt;&gt; &quot;255&quot; then\n        Wscript.Echo dest &amp; &quot;|&quot; &amp; gw &amp; &quot;|&quot; &amp; mask &amp; &quot;|&quot; &amp; &quot;-&quot; &amp; &quot;|&quot; &amp; metric &amp; &quot;|&quot; &amp; &quot;-&quot;\n    end if\nNext", 
            "script_type": "VBScript"
          }, 
          {
            "_type": "query", 
            "platform": "Linux", 
            "script": "route -n | grep -v Kernel | grep -v Destination | awk &#039;{ print $1 &quot;|&quot; $2 &quot;|&quot; $3 &quot;|&quot; $4 &quot;|&quot; $5 &quot;|&quot; $8 }&#039; | grep -v &quot;|127.0.0.1|&quot;\n", 
            "script_type": "UnixShell"
          }, 
          {
            "_type": "query", 
            "platform": "Mac", 
            "script": "netstat -rn | grep -v &quot;:&quot; | grep -v Destination | grep -v Routing | grep -v -e &quot;^$&quot; | awk &#039;{ print $1 &quot;|&quot; $2 &quot;||&quot; $3 &quot;||&quot; $6 }&#039; | grep -v &quot;|127.0.0.1|&quot;\n", 
            "script_type": "UnixShell"
          }
        ]
      }, 
      "source_id": 0, 
      "string_count": 43, 
      "subcolumns": {
        "_type": "subcolumns", 
        "subcolumn": [
          {
            "_type": "subcolumn", 
            "hidden_flag": 0, 
            "ignore_case_flag": 1, 
            "index": 0, 
            "name": "Destination", 
            "value_type": "IPAddress"
          }, 
          {
            "_type": "subcolumn", 
            "hidden_flag": 0, 
            "ignore_case_flag": 1, 
            "index": 1, 
            "name": "Gateway", 
            "value_type": "IPAddress"
          }, 
          {
            "_type": "subcolumn", 
            "hidden_flag": 0, 
            "ignore_case_flag": 1, 
            "index": 2, 
            "name": "Mask", 
            "value_type": "String"
          }, 
          {
            "_type": "subcolumn", 
            "hidden_flag": 0, 
            "ignore_case_flag": 1, 
            "index": 3, 
            "name": "Flags", 
            "value_type": "String"
          }, 
          {
            "_type": "subcolumn", 
            "hidden_flag": 0, 
            "ignore_case_flag": 1, 
            "index": 4, 
            "name": "Metric", 
            "value_type": "NumericInteger"
          }, 
          {
            "_type": "subcolumn", 
            "hidden_flag": 0, 
            "ignore_case_flag": 1, 
            "index": 5, 
            "name": "Interface", 
            "value_type": "String"
          }
        ]
      }, 
      "value_type": "String"
    }
  ]
}