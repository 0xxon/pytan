{
    "create_action_from_json": {
        "desc": "Export an action object to a JSON file, then create a new action object from the exported JSON file. Actions can not be deleted, so do not delete it. This will, in effect, 're-deploy' an action.",
        "priority": "1",
        "get": {"objtype": "action", "id": 1},
        "objtype": "action",
        "delete": false,
        "transform": null,
        "listobj": "taniumpy.ActionList",
        "singleobj": "taniumpy.Action"
    },
    "create_sensor_from_json": {
        "desc": "Export a sensor object to a JSON file, adding ' API TEST' to the name of the sensor before exporting the JSON file and deleting any pre-existing sensor with the same (new) name, then create a new sensor object from the exported JSON file",
        "priority": "1",
        "get": {"objtype": "sensor", "id": 381},
        "objtype": "sensor",
        "transform": ["name", " API TEST"],
        "delete": true,
        "listobj": "taniumpy.SensorList",
        "singleobj": "taniumpy.Sensor"
    },
    "create_group_from_json": {
        "desc": "Export a group object to a JSON file, adding ' API TEST' to the name of the group before exporting the JSON file and deleting any pre-existing group with the same (new) name, then create a new group object from the exported JSON file",
        "priority": "1",
        "get": {"objtype": "group", "name": "All Computers"},
        "objtype": "group",
        "transform": ["name", " API TEST"],
        "delete": true,
        "listobj": "taniumpy.GroupList",
        "singleobj": "taniumpy.Group"
    },
    "create_package_from_json": {
        "desc": "Export a package object to a JSON file, adding ' API TEST' to the name of the package before exporting the JSON file and deleting any pre-existing package with the same (new) name, then create a new package object from the exported JSON file",
        "priority": "1",
        "get": {"objtype": "package", "id": 31},
        "objtype": "package",
        "transform": ["name", " API TEST"],
        "delete": true,
        "listobj": "taniumpy.PackageSpecList",
        "singleobj": "taniumpy.PackageSpec"
    },
    "create_question_from_json": {
        "desc": "Export a question object to a JSON file, then create a new question object from the exported JSON file. Questions can not be deleted, so do not delete it. This will, in effect, 're-ask' a question.",
        "priority": "1",
        "get": {"objtype": "question", "id": 1},
        "objtype": "question",
        "delete": false,
        "transform": null,
        "listobj": "taniumpy.QuestionList",
        "singleobj": "taniumpy.Question"
    },
    "create_saved_question_from_json": {
        "desc": "Export a saved question object to a JSON file, adding ' API TEST' to the name of the saved question before exporting the JSON file and deleting any pre-existing saved question with the same (new) name, then create a new saved question object from the exported JSON file",
        "priority": "1",
        "get": {"objtype": "saved_question", "id": 1},
        "objtype": "saved_question",
        "delete": true,
        "transform": ["name", " API TEST"],
        "listobj": "taniumpy.SavedQuestionList",
        "singleobj": "taniumpy.SavedQuestion"
    },
    "create_user_from_json": {
        "desc": "Export a user object to a JSON file, adding ' API TEST' to the name of the user before exporting the JSON file and deleting any pre-existing user with the same (new) name, then create a new user object from the exported JSON file",
        "priority": "1",
        "get": {"objtype": "user", "id": 1},
        "objtype": "user",
        "delete": true,
        "transform": ["name", " API TEST"],
        "listobj": "taniumpy.UserList",
        "singleobj": "taniumpy.User"
    },
    "create_whitelisted_url_from_json": {
        "desc": "Export a whitelisted url object to a JSON file, adding ' test1' to the url_regex of the whitelisted url before exporting the JSON file and deleting any pre-existing whitelisted url with the same (new) name, then create a new whitelisted url object from the exported JSON file",
        "priority": "1",
        "get": {"objtype": "whitelisted_url", "url_regex": "test1"},
        "objtype": "whitelisted_url",
        "delete": true,
        "transform": ["url_regex", " API TEST"],
        "listobj": "taniumpy.WhiteListedUrlList",
        "singleobj": "taniumpy.WhiteListedUrl"
    }
}
